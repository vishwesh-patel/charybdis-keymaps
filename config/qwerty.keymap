/* upstream bindings and behaviors */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    /* --- KEYMAP CONFIG --- */
    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define EXTRAS  5
    // #define SLOW    6
    // #define SCROLL  7

    behaviors {
        home_row_mods: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        mod_layer: mod_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        mod_layer_clk: mod_layer_clk {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_LAYER_CLK";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    macros {
        tmux_attach: tmux_attach {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp A &kp ENTER>;
            label = "TMUX_ATTACH";
        };

        tmux_create_pane: tmux_create_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp C>;
            label = "TMUX_CREATE_PANE";
        };

        tmux_pane_h: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp LEFT>;
            label = "NEW_MACRO";
        };

        tmux_pane_j: tmux_pane_j {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp DOWN>;
            label = "TMUX_PANE_J";
        };

        tmux_pane_k: tmux_pane_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp UP>;
            label = "TMUX_PANE_K";
        };

        tmux_pane_l: tmux_pane_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp RIGHT>;
            label = "TMUX_PANE_L";
        };

        tmux_win_n: tmux_win_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N>;
            label = "TMUX_WIN_N";
        };

        tmux_win_p: tmux_win_p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp P>;
            label = "TMUX_WIN_P";
        };

        tmux_sess_s: tmux_sess_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
            label = "TMUX_SESS_S";
        };

        tmux_fuzzy_f: tmux_fuzzy_f {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp LS(F)>;
            label = "TMUX_FUZZY_F";
        };

        tmux_detach: tmux_detach {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp D>;
            label = "TMUX_DETACH";
        };

        tmux_split_v: tmux_split_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp PERCENT>;
            label = "TMUX_SPLIT_V";
        };

        tmux_split_h: tmux_split_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp DOUBLE_QUOTES>;
            label = "TMUX_SPLIT_H";
        };
    };

    combos {
        compatible = "zmk,combos";

        left_round_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        right_round_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 10>;
        };

        right_curly_par {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 22>;
        };

        left_curly_par {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 20>;
        };

        left_sqr_par {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        right_sqr_par {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 34>;
        };

        equal_sign {
            bindings = <&kp EQUAL>;
            key-positions = <1 2>;
        };

        plus_sign {
            bindings = <&kp PLUS>;
            key-positions = <3 4>;
        };

        minus_sign {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
        };

        underscore_sign {
            bindings = <&kp LS(UNDERSCORE)>;
            key-positions = <13 14>;
        };

        double_qoutes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <27 28>;
        };

        single_quotes {
            bindings = <&kp LS(SINGLE_QUOTE)>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp GRAVE     &kp Q                   &kp W                    &kp E                      &kp R                  &kp T        &kp Y      &kp U                       &kp I                       &kp O                         &kp P                                   &kp BACKSLASH
&kp CAPSLOCK  &home_row_mods LCTRL A  &home_row_mods LSHIFT S  &home_row_mods LEFT_ALT D  &home_row_mods LWIN F  &kp G        &kp H      &home_row_mods RIGHT_WIN J  &home_row_mods RIGHT_ALT K  &home_row_mods RIGHT_SHIFT L  &home_row_mods RIGHT_CONTROL SEMICOLON  &mkp RCLK
&kp LG(L)     &kp Z                   &kp X                    &kp C                      &kp V                  &kp B        &kp N      &kp M                       &kp COMMA                   &kp PERIOD                    &kp SLASH                               &kp LA(LC(DEL))
                                                               &mod_layer 4 ESC           &mod_layer_clk 1 LCLK  &kp SPACE    &kp ENTER  &mod_layer 2 BACKSPACE
            >;
        };

        Num_Symbol {
            bindings = <
&trans   &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp F11  &kp F1           &kp F2       &kp F3    &kp F4      &kp F5         &kp F6     &kp F7         &kp F8        &kp F9                &kp F10                &kp F12
                                       &trans    &trans      &trans         &kp TAB    &mo 3
            >;
        };

        Nav {
            bindings = <
&bt BT_SEL 0  &bt BT_PRV  &bt BT_NXT  &trans     &trans     &trans       &trans    &kp PAGE_UP    &trans  &bt BT_CLR_ALL  &bt BT_CLR  &bt BT_DISC 0
&bt BT_SEL 1  &trans      &kp LA(H)   &kp LA(J)  &kp LA(K)  &kp LA(L)    &kp LEFT  &kp DOWN       &kp UP  &kp RIGHT       &trans      &bt BT_DISC 1
&bt BT_SEL 2  &trans      &trans      &trans     &trans     &trans       &trans    &kp PAGE_DOWN  &trans  &trans          &trans      &bt BT_DISC 2
                                      &mo 5      &mo 3      &trans       &trans    &trans
            >;
        };

        WM {
            bindings = <
&trans  &kp LA(N1)      &kp LA(N2)      &kp LA(N3)      &kp LA(N4)      &kp LA(N5)        &kp LA(N6)      &kp LA(N7)      &kp LA(N8)      &kp LA(N9)      &kp LA(N0)      &trans
&trans  &kp LA(LS(N1))  &kp LS(LA(N2))  &kp LS(LA(N3))  &kp LS(LA(N4))  &kp LS(LA(N5))    &kp LS(LA(N6))  &kp LS(LA(N7))  &kp LS(LA(N8))  &kp LS(LA(N9))  &kp LS(LA(N0))  &trans
&trans  &trans          &kp LS(LA(A))   &kp LS(LA(S))   &kp LS(LA(D))   &kp LS(LA(F))     &kp LS(LA(H))   &kp LS(LA(J))   &kp LS(LA(K))   &kp LA(LS(L))   &trans          &trans
                                        &trans          &trans          &trans            &trans          &trans
            >;
        };

        Media_scroll {
            bindings = <
&trans  &kp C_VOLUME_UP    &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_VOLUME_DOWN  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp K_MUTE         &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans  &trans  &trans    &trans  &mo 5
            >;
        };

        TMUX {
            bindings = <
&trans  &trans        &trans        &trans             &trans         &tmux_split_v    &trans        &trans        &trans        &trans        &tmux_win_p  &trans
&trans  &tmux_attach  &tmux_sess_s  &tmux_detach       &tmux_fuzzy_f  &trans           &tmux_pane_h  &tmux_pane_j  &tmux_pane_k  &tmux_pane_l  &trans       &trans
&trans  &trans        &trans        &tmux_create_pane  &trans         &tmux_split_h    &tmux_win_n   &trans        &trans        &trans        &trans       &trans
                                    &trans             &trans         &trans           &trans        &trans
            >;
        };
    };
};
